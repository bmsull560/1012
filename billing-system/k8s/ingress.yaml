apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: billing-ingress
  namespace: billing-production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://billing.valueverse.com"
    nginx.ingress.kubernetes.io/websocket-services: "billing-api"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
spec:
  tls:
  - hosts:
    - billing.valueverse.com
    - api.billing.valueverse.com
    secretName: billing-tls
  rules:
  - host: billing.valueverse.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: billing-frontend
            port:
              number: 3000
  - host: api.billing.valueverse.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: billing-api
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: billing-api
            port:
              number: 8000
