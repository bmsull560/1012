{
  "name": "ValueVerse Full-Stack Development",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",
  
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "22"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "charliermarsh.ruff",
        
        // JavaScript/TypeScript/React
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        "styled-components.vscode-styled-components",
        
        // Database
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        
        // Docker & Kubernetes
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        
        // Git & Version Control
        "eamodio.gitlens",
        "mhutchie.git-graph",
        
        // Testing
        "hbenl.vscode-test-explorer",
        "littlefoxteam.vscode-python-test-adapter",
        "ms-playwright.playwright",
        
        // AI & Code Quality
        "github.copilot",
        "github.copilot-chat",
        "sonarsource.sonarlint-vscode",
        
        // REST API Development
        "humao.rest-client",
        "42crunch.vscode-openapi",
        
        // Markdown & Documentation
        "yzhang.markdown-all-in-one",
        "bierner.markdown-mermaid",
        
        // Utilities
        "editorconfig.editorconfig",
        "christian-kohler.path-intellisense",
        "visualstudioexptteam.vscodeintellicode",
        "streetsidesoftware.code-spell-checker",
        "usernamehw.errorlens",
        "gruntfuggly.todo-tree"
      ],
      
      "settings": {
        // Python Settings
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.formatting.provider": "black",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
          }
        },
        
        // TypeScript/JavaScript Settings
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
          }
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
          }
        },
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        
        // Editor Settings
        "editor.formatOnSave": true,
        "editor.rulers": [80, 120],
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.bracketPairs": true,
        "editor.inlineSuggest.enabled": true,
        "editor.suggestSelection": "first",
        
        // File Settings
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true,
          "**/node_modules": true,
          "**/.next": true
        },
        "files.watcherExclude": {
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/node_modules/**": true,
          "**/.next/**": true
        },
        
        // Terminal Settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.fontSize": 14,
        
        // Git Settings
        "git.autofetch": true,
        "git.confirmSync": false,
        "git.enableSmartCommit": true,
        
        // Security & Linting
        "security.workspace.trust.enabled": true,
        "eslint.validate": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        
        // Tailwind CSS
        "tailwindCSS.experimental.classRegex": [
          ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
        ],
        
        // Error Lens
        "errorLens.enabledDiagnosticLevels": [
          "error",
          "warning"
        ]
      }
    }
  },

  "forwardPorts": [3000, 8000, 5432, 6379],
  "portsAttributes": {
    "3000": {
      "label": "Frontend (Next.js)",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Backend (FastAPI)",
      "onAutoForward": "notify"
    },
    "5432": {
      "label": "PostgreSQL",
      "onAutoForward": "silent"
    },
    "6379": {
      "label": "Redis",
      "onAutoForward": "silent"
    }
  },

  "postCreateCommand": "bash .devcontainer/post-create.sh",
  
  "remoteUser": "node",
  
  "mounts": [
    "source=${localEnv:HOME}/.ssh,target=/home/node/.ssh,readonly,type=bind,consistency=cached"
  ]
}

