# NOTE: This is a template. In production, use external secrets management
# (AWS Secrets Manager, HashiCorp Vault, or Sealed Secrets)
# DO NOT commit actual secrets to git!

apiVersion: v1
kind: Secret
metadata:
  name: valueverse-secrets
  namespace: valueverse-prod
type: Opaque
stringData:
  # Database Credentials (Base64 encoded in actual deployment)
  DB_USERNAME: "REPLACE_WITH_ACTUAL_USERNAME"
  DB_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # Redis Password
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # JWT Secrets
  JWT_SECRET_KEY: "REPLACE_WITH_GENERATED_SECRET"
  JWT_ALGORITHM: "HS256"
  
  # API Keys
  OPENAI_API_KEY: "REPLACE_WITH_ACTUAL_KEY"
  ANTHROPIC_API_KEY: "REPLACE_WITH_ACTUAL_KEY"
  TOGETHER_API_KEY: "REPLACE_WITH_ACTUAL_KEY"
  
  # AWS Credentials (for Secrets Manager)
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_ACTUAL_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_ACTUAL_SECRET"
  
  # Monitoring
  GRAFANA_ADMIN_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"

---
# Example: External Secrets Operator configuration
# This pulls secrets from AWS Secrets Manager automatically
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: valueverse-external-secrets
  namespace: valueverse-prod
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: valueverse-secrets-from-aws
    creationPolicy: Owner
  data:
    - secretKey: DB_PASSWORD
      remoteRef:
        key: valueverse/prod/database
        property: password
    - secretKey: JWT_SECRET_KEY
      remoteRef:
        key: valueverse/prod/jwt
        property: secret_key
    - secretKey: OPENAI_API_KEY
      remoteRef:
        key: valueverse/prod/api-keys
        property: openai_api_key

---
# Secret Store configuration for AWS Secrets Manager
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: valueverse-prod
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        secretRef:
          accessKeyIDSecretRef:
            name: aws-credentials
            key: access-key-id
          secretAccessKeySecretRef:
            name: aws-credentials
            key: secret-access-key
