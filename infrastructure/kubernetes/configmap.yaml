apiVersion: v1
kind: ConfigMap
metadata:
  name: valueverse-config
  namespace: valueverse-prod
data:
  # Application Configuration
  ENVIRONMENT: "production"
  APP_NAME: "ValueVerse Platform"
  APP_VERSION: "1.0.0"
  DEBUG: "false"
  
  # API Configuration
  API_V1_PREFIX: "/api/v1"
  
  # Database Configuration
  DB_HOST: "postgres-primary-service"
  DB_PORT: "5432"
  DB_NAME: "valueverse"
  DB_POOL_SIZE: "25"
  DB_MAX_OVERFLOW: "10"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Celery Configuration
  CELERY_BROKER_URL: "redis://redis-service:6379/1"
  CELERY_RESULT_BACKEND: "redis://redis-service:6379/2"
  
  # CORS Configuration
  BACKEND_CORS_ORIGINS: "https://valueverse.com,https://www.valueverse.com,https://api.valueverse.com"
  
  # WebSocket Configuration
  WEBSOCKET_PING_INTERVAL: "25"
  WEBSOCKET_PING_TIMEOUT: "5"
  WEBSOCKET_MAX_CONNECTIONS: "10000"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "60"
  RATE_LIMIT_PER_HOUR: "1000"
  
  # AWS Configuration
  AWS_REGION: "us-east-1"
  
  # Frontend Configuration
  NEXT_PUBLIC_API_URL: "https://api.valueverse.com"
  NEXT_PUBLIC_WS_URL: "wss://api.valueverse.com/ws"
  
  # Monitoring
  PROMETHEUS_ENABLED: "true"
  METRICS_PORT: "9090"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: valueverse-prod
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 10000;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        gzip on;
        gzip_vary on;
        gzip_types text/plain text/css application/json application/javascript;
        
        upstream backend {
            least_conn;
            server backend-service:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        server {
            listen 80;
            server_name _;
            
            location /health {
                access_log off;
                return 200 "healthy\n";
            }
            
            location / {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
