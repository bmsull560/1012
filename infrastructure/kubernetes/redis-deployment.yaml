apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: valueverse-prod
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    databases 16
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Append Only File
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Memory Management
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    
    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    
    # Security
    # requirepass will be set via environment variable

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: valueverse-prod
  labels:
    app: redis
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: valueverse-prod
  labels:
    app: redis
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          
          command:
            - redis-server
            - /etc/redis/redis.conf
            - --requirepass
            - $(REDIS_PASSWORD)
          
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: valueverse-secrets
                  key: REDIS_PASSWORD
          
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --pass
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --pass
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
        
        # Redis Exporter for Prometheus
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          
          ports:
            - name: metrics
              containerPort: 9121
          
          env:
            - name: REDIS_ADDR
              value: "localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: valueverse-secrets
                  key: REDIS_PASSWORD
          
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
  
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3-encrypted
        resources:
          requests:
            storage: 10Gi

---
# Redis Sentinel for HA (Optional)
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: valueverse-prod
data:
  sentinel.conf: |
    port 26379
    sentinel monitor mymaster redis-0.redis-service 6379 2
    sentinel down-after-milliseconds mymaster 5000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 10000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: valueverse-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
        - name: sentinel
          image: redis:7-alpine
          
          command:
            - redis-sentinel
            - /etc/redis/sentinel.conf
          
          ports:
            - name: sentinel
              containerPort: 26379
          
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis
          
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: valueverse-prod
spec:
  type: ClusterIP
  ports:
    - name: sentinel
      port: 26379
      targetPort: 26379
  selector:
    app: redis-sentinel
